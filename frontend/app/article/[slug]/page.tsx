/**
 * –°—Ç—Ä–∞–Ω–∏—Ü–∞ —Å—Ç–∞—Ç—å–∏ –±–ª–æ–≥–æ–≤–æ–π –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã "–ù–æ–≤–æ–µ –ø–æ–∫–æ–ª–µ–Ω–∏–µ"
 * Dynamic Server Component —Å SEO –∏ —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
 */

import type { Metadata } from 'next';
import { notFound } from 'next/navigation';
import { BlogLayout } from '@/components/layout/BlogLayout';
import { formatDate } from '@/lib/utils';

/**
 * –ü–∞—Ä–∞–º–µ—Ç—Ä—ã —Å—Ç—Ä–∞–Ω–∏—Ü—ã
 */
interface ArticlePageProps {
  params: { slug: string };
}

/**
 * –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö —Å—Ç–∞—Ç—å–∏ (–∑–∞–≥–ª—É—à–∫–∞)
 * –í –±—É–¥—É—â–µ–º –±—É–¥–µ—Ç –∑–∞–º–µ–Ω–µ–Ω–æ –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π API –≤—ã–∑–æ–≤
 */
async function getArticle(slug: string) {
  // –ó–∞–≥–ª—É—à–∫–∞ –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏
  if (slug === 'test-article') {
    return {
      id: '1',
      title: '–ö–∞–∫ —Å–æ–∑–¥–∞—Ç—å —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—É—é –±–ª–æ–≥–æ–≤—É—é –ø–ª–∞—Ç—Ñ–æ—Ä–º—É —Å Next.js –∏ Strapi',
      slug: 'test-article',
      content: '<p>–≠—Ç–æ —Ç–µ—Å—Ç–æ–≤–∞—è —Å—Ç–∞—Ç—å—è –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏...</p>',
      excerpt: '–ü–æ—à–∞–≥–æ–≤–æ–µ —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ –ø–æ —Å–æ–∑–¥–∞–Ω–∏—é –±–ª–æ–≥–æ–≤–æ–π –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π.',
      cover_image: null,
      author: {
        id: '1',
        display_name: '–ê–ª–µ–∫—Å–µ–π –†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫',
        avatar: null,
        bio: 'Fullstack —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫ —Å –æ–ø—ã—Ç–æ–º –≤ React –∏ Node.js'
      },
      category: {
        id: '1',
        name: '–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞',
        slug: 'development',
        color: '#3b82f6'
      },
      tags: [
        { id: '1', name: 'Next.js', slug: 'nextjs' },
        { id: '2', name: 'React', slug: 'react' },
        { id: '3', name: 'TypeScript', slug: 'typescript' }
      ],
      reading_time: 8,
      views_count: 1250,
      likes_count: 45,
      comments_count: 12,
      published_at: new Date('2024-01-15'),
      status: 'published',
      access_level: 'free'
    };
  }
  return null;
}

/**
 * –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –º–µ—Ç–∞–¥–∞–Ω–Ω—ã—Ö —Å—Ç–∞—Ç—å–∏
 */
export async function generateMetadata({ params }: ArticlePageProps): Promise<Metadata> {
  const article = await getArticle(params.slug);
  
  if (!article) {
    return {
      title: '–°—Ç–∞—Ç—å—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞',
    };
  }

  return {
    title: article.title,
    description: article.excerpt,
    keywords: article.tags.map(tag => tag.name),
    authors: [{ name: article.author.display_name }],
    openGraph: {
      title: article.title,
      description: article.excerpt,
      type: 'article',
      publishedTime: article.published_at.toISOString(),
      authors: [article.author.display_name],
      tags: article.tags.map(tag => tag.name),
    },
    twitter: {
      card: 'summary_large_image',
      title: article.title,
      description: article.excerpt,
    },
  };
}

/**
 * –•–µ–¥–µ—Ä —Å—Ç–∞—Ç—å–∏ —Å –º–µ—Ç–∞–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π
 */
const ArticleHeader = ({ article }: { article: any }) => (
  <header className="mb-8">
    {/* –ö–∞—Ç–µ–≥–æ—Ä–∏—è */}
    <div className="mb-4">
      <span 
        className="badge badge-lg"
        style={{ backgroundColor: article.category.color + '20', color: article.category.color }}
      >
        {article.category.name}
      </span>
    </div>

    {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
    <h1 className="text-3xl md:text-4xl font-bold text-base-content mb-4">
      {article.title}
    </h1>

    {/* –ú–µ—Ç–∞–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
    <div className="flex flex-wrap items-center gap-4 text-sm text-base-content/70">
      <div className="flex items-center space-x-2">
        <div className="w-8 h-8 bg-primary rounded-full flex items-center justify-center">
          <span className="text-primary-content text-xs font-bold">
            {article.author.display_name.charAt(0)}
          </span>
        </div>
        <span>{article.author.display_name}</span>
      </div>
      <span>‚Ä¢</span>
      <time dateTime={article.published_at.toISOString()}>
        {formatDate(article.published_at)}
      </time>
      <span>‚Ä¢</span>
      <span>{article.reading_time} –º–∏–Ω —á—Ç–µ–Ω–∏—è</span>
      <span>‚Ä¢</span>
      <span>{article.views_count.toLocaleString()} –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤</span>
    </div>

    {/* –¢–µ–≥–∏ */}
    <div className="flex flex-wrap gap-2 mt-4">
      {article.tags.map((tag: any) => (
        <span key={tag.id} className="badge badge-ghost badge-sm">
          #{tag.name}
        </span>
      ))}
    </div>
  </header>
);

/**
 * –ö–æ–Ω—Ç–µ–Ω—Ç —Å—Ç–∞—Ç—å–∏
 */
const ArticleContent = ({ article }: { article: any }) => (
  <article className="prose prose-lg max-w-none">
    {/* –í –±—É–¥—É—â–µ–º –∑–¥–µ—Å—å –±—É–¥–µ—Ç —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥ rich text –∫–æ–Ω—Ç–µ–Ω—Ç–∞ */}
    <div 
      dangerouslySetInnerHTML={{ __html: article.content }}
      className="text-base-content"
    />
    
    {/* –ó–∞–≥–ª—É—à–∫–∞ –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ */}
    <div className="mt-8 p-6 bg-base-200 rounded-lg">
      <h3>–°–æ–¥–µ—Ä–∂–∏–º–æ–µ —Å—Ç–∞—Ç—å–∏</h3>
      <p>
        –ó–¥–µ—Å—å –±—É–¥–µ—Ç –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è –ø–æ–ª–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç —Å—Ç–∞—Ç—å–∏, –æ—Ç—Ä–µ–Ω–¥–µ—Ä–µ–Ω–Ω—ã–π –∏–∑ rich text —Ñ–æ—Ä–º–∞—Ç–∞ Strapi.
        –í —Ç–µ–∫—É—â–µ–π –≤–µ—Ä—Å–∏–∏ —ç—Ç–æ –∑–∞–≥–ª—É—à–∫–∞ –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã —Å—Ç—Ä–∞–Ω–∏—Ü—ã.
      </p>
      <p>
        –°—Ç–∞—Ç—å—è –±—É–¥–µ—Ç —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç, –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è, –±–ª–æ–∫–∏ –∫–æ–¥–∞, 
        –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–µ –≤–∏–¥–µ–æ –∏ –¥—Ä—É–≥–∏–µ –º–µ–¥–∏–∞-—ç–ª–µ–º–µ–Ω—Ç—ã.
      </p>
    </div>
  </article>
);

/**
 * –î–µ–π—Å—Ç–≤–∏—è —Å–æ —Å—Ç–∞—Ç—å–µ–π (–ª–∞–π–∫–∏, –∑–∞–∫–ª–∞–¥–∫–∏, –ø–æ–¥–µ–ª–∏—Ç—å—Å—è)
 */
const ArticleActions = ({ article }: { article: any }) => (
  <div className="flex justify-between items-center py-6 border-t border-base-300">
    <div className="flex items-center space-x-4">
      <button className="btn btn-ghost btn-sm">
        ‚ù§Ô∏è {article.likes_count}
      </button>
      <button className="btn btn-ghost btn-sm">
        üîñ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å
      </button>
      <button className="btn btn-ghost btn-sm">
        üí¨ {article.comments_count}
      </button>
    </div>
    <button className="btn btn-ghost btn-sm">
      üì§ –ü–æ–¥–µ–ª–∏—Ç—å—Å—è
    </button>
  </div>
);

/**
 * –°—Ç—Ä–∞–Ω–∏—Ü–∞ —Å—Ç–∞—Ç—å–∏
 */
export default async function ArticlePage({ params }: ArticlePageProps) {
  const article = await getArticle(params.slug);

  if (!article) {
    notFound();
  }

  // –•–ª–µ–±–Ω—ã–µ –∫—Ä–æ—à–∫–∏
  const breadcrumbs = [
    { label: '–ì–ª–∞–≤–Ω–∞—è', href: '/' },
    { label: '–°—Ç–∞—Ç—å–∏', href: '/articles' },
    { label: article.category.name, href: `/category/${article.category.slug}` },
    { label: article.title, isActive: true },
  ];

  return (
    <BlogLayout
      variant="article"
      showBreadcrumbs={true}
      breadcrumbs={breadcrumbs}
      sidebarContent={{
        showCategories: true,
        showTags: true,
        showPopularArticles: true,
        showRecentArticles: false,
      }}
    >
      <div className="max-w-4xl">
        <ArticleHeader article={article} />
        <ArticleContent article={article} />
        <ArticleActions article={article} />
        
        {/* –°–µ–∫—Ü–∏—è –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤ - –±—É–¥–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω–∞ –ø–æ–∑–∂–µ */}
        <div className="mt-8 p-6 bg-base-200 rounded-lg">
          <h3 className="text-lg font-semibold mb-4">
            –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ ({article.comments_count})
          </h3>
          <p className="text-base-content/70">
            –°–∏—Å—Ç–µ–º–∞ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤ –±—É–¥–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ —Å–ª–µ–¥—É—é—â–∏—Ö —ç—Ç–∞–ø–∞—Ö —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏.
          </p>
        </div>
      </div>
    </BlogLayout>
  );
} 