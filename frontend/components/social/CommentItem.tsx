'use client';

import { useState } from 'react';
import Link from 'next/link';
import { Avatar } from '@/components/ui/Avatar';
import { Button } from '@/components/ui/Button';
import { Comment } from '@/types/Comment';
import { formatDate } from '@/lib/utils/formatting';

/**
 * –ü—Ä–æ–ø—Å—ã –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è
 */
interface CommentItemProps {
  readonly comment: Comment;
  readonly currentUserId?: string;
  readonly canModerate?: boolean;
  readonly onReply?: (commentId: string) => void;
  readonly onLike?: (commentId: string) => void;
  readonly onEdit?: (commentId: string) => void;
  readonly onDelete?: (commentId: string) => void;
  readonly onModerate?: (commentId: string, action: 'approve' | 'reject') => void;
}

/**
 * –ü–æ–ª—É—á–∞–µ—Ç —Å—Ç–∞—Ç—É—Å –º–æ–¥–µ—Ä–∞—Ü–∏–∏ –≤ —á–∏—Ç–∞–µ–º–æ–º –≤–∏–¥–µ
 * @param status - —Å—Ç–∞—Ç—É—Å –º–æ–¥–µ—Ä–∞—Ü–∏–∏
 * @returns –æ–ø–∏—Å–∞–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞
 */
const getModerationStatusLabel = (status: string): string => {
  switch (status) {
    case 'pending': return '–ù–∞ –º–æ–¥–µ—Ä–∞—Ü–∏–∏';
    case 'approved': return '–û–¥–æ–±—Ä–µ–Ω';
    case 'rejected': return '–û—Ç–∫–ª–æ–Ω–µ–Ω';
    default: return '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ';
  }
};

/**
 * –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –æ—Ç–¥–µ–ª—å–Ω–æ–≥–æ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è
 * –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –ª–∞–π–∫–∏, –æ—Ç–≤–µ—Ç—ã, —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ –º–æ–¥–µ—Ä–∞—Ü–∏—é
 * @param comment - –¥–∞–Ω–Ω—ã–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è
 * @param currentUserId - ID —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 * @param canModerate - –º–æ–∂–µ—Ç –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –º–æ–¥–µ—Ä–∏—Ä–æ–≤–∞—Ç—å
 * @param onReply - –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—Ç–≤–µ—Ç–∞ –Ω–∞ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π
 * @param onLike - –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –ª–∞–π–∫–∞ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è
 * @param onEdit - –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
 * @param onDelete - –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —É–¥–∞–ª–µ–Ω–∏—è
 * @param onModerate - –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –º–æ–¥–µ—Ä–∞—Ü–∏–∏
 * @returns JSX —ç–ª–µ–º–µ–Ω—Ç –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è
 */
export const CommentItem = ({
  comment,
  currentUserId,
  canModerate = false,
  onReply,
  onLike,
  onEdit,
  onDelete,
  onModerate
}: CommentItemProps) => {
  const [showActions, setShowActions] = useState(false);
  const isAuthor = currentUserId === comment.author?.id;
  const isPending = comment.moderationStatus === 'pending';
  const isRejected = comment.moderationStatus === 'rejected';

  return (
    <div 
      className={`p-4 border rounded-lg ${
        isPending ? 'bg-yellow-50 border-yellow-200' : 
        isRejected ? 'bg-red-50 border-red-200' : 
        'bg-white border-gray-200'
      }`}
      onMouseEnter={() => setShowActions(true)}
      onMouseLeave={() => setShowActions(false)}
    >
      <div className="flex gap-3">
        {/* –ê–≤–∞—Ç–∞—Ä –∞–≤—Ç–æ—Ä–∞ */}
        <div className="flex-shrink-0">
          <Avatar
            src={comment.author?.avatar}
            alt={comment.author?.name || '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å'}
            size="sm"
          />
        </div>

        {/* –ö–æ–Ω—Ç–µ–Ω—Ç –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è */}
        <div className="flex-grow min-w-0">
          {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
          <div className="flex items-center gap-2 mb-2">
            <span className="font-medium text-gray-900">
              {comment.author?.name || '–ê–Ω–æ–Ω–∏–º–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å'}
            </span>
            
            <time className="text-xs text-gray-500">
              {formatDate(comment.createdAt)}
            </time>

            {/* –°—Ç–∞—Ç—É—Å –º–æ–¥–µ—Ä–∞—Ü–∏–∏ */}
            {canModerate && (
              <span className={`text-xs px-2 py-1 rounded-full ${
                isPending ? 'bg-yellow-100 text-yellow-800' :
                isRejected ? 'bg-red-100 text-red-800' :
                'bg-green-100 text-green-800'
              }`}>
                {getModerationStatusLabel(comment.moderationStatus || 'approved')}
              </span>
            )}

            {/* –ó–∞–∫—Ä–µ–ø–ª–µ–Ω–Ω—ã–π –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π */}
            {comment.isPinned && (
              <span className="text-xs bg-blue-100 text-blue-800 px-2 py-1 rounded-full">
                üìå –ó–∞–∫—Ä–µ–ø–ª–µ–Ω
              </span>
            )}
          </div>

          {/* –¢–µ–∫—Å—Ç –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è */}
          <div className="text-gray-800 mb-3 leading-relaxed">
            {comment.content}
          </div>

          {/* –î–µ–π—Å—Ç–≤–∏—è */}
          <div className={`flex items-center gap-4 transition-opacity duration-200 ${
            showActions ? 'opacity-100' : 'opacity-60'
          }`}>
            {/* –õ–∞–π–∫ */}
            <button
              onClick={() => onLike?.(comment.id)}
              className="flex items-center gap-1 text-sm text-gray-500 hover:text-red-600 transition-colors"
            >
              <span className={comment.isLiked ? '‚ù§Ô∏è' : 'ü§ç'}>
                {comment.isLiked ? '‚ù§Ô∏è' : 'ü§ç'}
              </span>
              {comment.likesCount || 0}
            </button>

            {/* –û—Ç–≤–µ—Ç–∏—Ç—å */}
            <button
              onClick={() => onReply?.(comment.id)}
              className="text-sm text-gray-500 hover:text-blue-600 transition-colors"
            >
              –û—Ç–≤–µ—Ç–∏—Ç—å
            </button>

            {/* –î–µ–π—Å—Ç–≤–∏—è –∞–≤—Ç–æ—Ä–∞ */}
            {isAuthor && (
              <>
                <button
                  onClick={() => onEdit?.(comment.id)}
                  className="text-sm text-gray-500 hover:text-green-600 transition-colors"
                >
                  –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å
                </button>
                <button
                  onClick={() => onDelete?.(comment.id)}
                  className="text-sm text-gray-500 hover:text-red-600 transition-colors"
                >
                  –£–¥–∞–ª–∏—Ç—å
                </button>
              </>
            )}

            {/* –î–µ–π—Å—Ç–≤–∏—è –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞ */}
            {canModerate && isPending && (
              <div className="flex gap-2 ml-auto">
                <Button
                  size="sm"
                  variant="outline"
                  onClick={() => onModerate?.(comment.id, 'approve')}
                  className="text-green-600 border-green-600 hover:bg-green-50"
                >
                  –û–¥–æ–±—Ä–∏—Ç—å
                </Button>
                <Button
                  size="sm"
                  variant="outline"
                  onClick={() => onModerate?.(comment.id, 'reject')}
                  className="text-red-600 border-red-600 hover:bg-red-50"
                >
                  –û—Ç–∫–ª–æ–Ω–∏—Ç—å
                </Button>
              </div>
            )}
          </div>
        </div>
      </div>
    </div>
  );
}; 