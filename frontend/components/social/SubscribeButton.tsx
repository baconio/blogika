'use client';

import { useState } from 'react';
import { Button } from '@/components/ui/Button';

/**
 * –¢–∏–ø—ã –ø–æ–¥–ø–∏—Å–æ–∫
 */
type SubscriptionPlan = 'monthly' | 'yearly' | 'lifetime';

/**
 * –ü—Ä–æ–ø—Å—ã –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞ –∫–Ω–æ–ø–∫–∏ –ø–ª–∞—Ç–Ω–æ–π –ø–æ–¥–ø–∏—Å–∫–∏
 */
interface SubscribeButtonProps {
  readonly authorId: string;
  readonly isSubscribed?: boolean;
  readonly subscriptionPlan?: SubscriptionPlan;
  readonly monthlyPrice?: number;
  readonly yearlyPrice?: number;
  readonly lifetimePrice?: number;
  readonly onSubscribe: (authorId: string, plan: SubscriptionPlan) => Promise<void>;
  readonly onManageSubscription?: (authorId: string) => void;
  readonly disabled?: boolean;
  readonly size?: 'sm' | 'md' | 'lg';
  readonly showPrices?: boolean;
  readonly currency?: string;
  readonly fullWidth?: boolean;
}

/**
 * –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –∫–Ω–æ–ø–∫–∏ –ø–ª–∞—Ç–Ω–æ–π –ø–æ–¥–ø–∏—Å–∫–∏ –Ω–∞ –∞–≤—Ç–æ—Ä–∞
 * –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç —Ä–∞–∑–ª–∏—á–Ω—ã–µ –ø–ª–∞–Ω—ã –ø–æ–¥–ø–∏—Å–∫–∏ –∏ —Ü–µ–Ω—ã
 * @param authorId - ID –∞–≤—Ç–æ—Ä–∞
 * @param isSubscribed - –∞–∫—Ç–∏–≤–Ω–∞ –ª–∏ –ø–æ–¥–ø–∏—Å–∫–∞
 * @param subscriptionPlan - —Ç–µ–∫—É—â–∏–π –ø–ª–∞–Ω –ø–æ–¥–ø–∏—Å–∫–∏
 * @param monthlyPrice - —Ü–µ–Ω–∞ –º–µ—Å—è—á–Ω–æ–π –ø–æ–¥–ø–∏—Å–∫–∏
 * @param yearlyPrice - —Ü–µ–Ω–∞ –≥–æ–¥–æ–≤–æ–π –ø–æ–¥–ø–∏—Å–∫–∏
 * @param lifetimePrice - —Ü–µ–Ω–∞ –ø–æ–∂–∏–∑–Ω–µ–Ω–Ω–æ–π –ø–æ–¥–ø–∏—Å–∫–∏
 * @param onSubscribe - –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –ø–æ–¥–ø–∏—Å–∫–∏
 * @param onManageSubscription - –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–æ–¥–ø–∏—Å–∫–æ–π
 * @param disabled - –æ—Ç–∫–ª—é—á–µ–Ω–∞ –ª–∏ –∫–Ω–æ–ø–∫–∞
 * @param size - —Ä–∞–∑–º–µ—Ä –∫–Ω–æ–ø–∫–∏
 * @param showPrices - –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å –ª–∏ —Ü–µ–Ω—ã
 * @param currency - –≤–∞–ª—é—Ç–∞
 * @param fullWidth - —Ä–∞—Å—Ç—è–Ω—É—Ç—å –∫–Ω–æ–ø–∫—É –Ω–∞ –≤—Å—é —à–∏—Ä–∏–Ω—É
 * @returns JSX —ç–ª–µ–º–µ–Ω—Ç –∫–Ω–æ–ø–∫–∏ –ø–ª–∞—Ç–Ω–æ–π –ø–æ–¥–ø–∏—Å–∫–∏
 */
export const SubscribeButton = ({
  authorId,
  isSubscribed = false,
  subscriptionPlan,
  monthlyPrice = 299,
  yearlyPrice = 2990,
  lifetimePrice = 9990,
  onSubscribe,
  onManageSubscription,
  disabled = false,
  size = 'md',
  showPrices = true,
  currency = '‚ÇΩ',
  fullWidth = false
}: SubscribeButtonProps) => {
  const [isLoading, setIsLoading] = useState(false);
  const [selectedPlan, setSelectedPlan] = useState<SubscriptionPlan>('monthly');
  const [showPlans, setShowPlans] = useState(false);

  const handleSubscribe = async (plan: SubscriptionPlan) => {
    if (disabled || isLoading) return;

    setIsLoading(true);

    try {
      await onSubscribe(authorId, plan);
      setShowPlans(false);
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–∏ –ø–æ–¥–ø–∏—Å–∫–∏:', error);
    } finally {
      setIsLoading(false);
    }
  };

  const handleManage = () => {
    onManageSubscription?.(authorId);
  };

  // –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ü–µ–Ω—ã
  const formatPrice = (price: number): string => {
    return `${price} ${currency}`;
  };

  // –ü–æ–ª—É—á–∏—Ç—å —Ü–µ–Ω—É –¥–ª—è –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –ø–ª–∞–Ω–∞
  const getPriceForPlan = (plan: SubscriptionPlan): number => {
    switch (plan) {
      case 'monthly': return monthlyPrice;
      case 'yearly': return yearlyPrice;
      case 'lifetime': return lifetimePrice;
      default: return monthlyPrice;
    }
  };

  // –ü–æ–ª—É—á–∏—Ç—å –æ–ø–∏—Å–∞–Ω–∏–µ –ø–ª–∞–Ω–∞
  const getPlanDescription = (plan: SubscriptionPlan): string => {
    switch (plan) {
      case 'monthly': return '–≤ –º–µ—Å—è—Ü';
      case 'yearly': return '–≤ –≥–æ–¥';
      case 'lifetime': return '–Ω–∞–≤—Å–µ–≥–¥–∞';
      default: return '';
    }
  };

  // –ü–æ–ª—É—á–∏—Ç—å —Å–∫–∏–¥–∫—É –¥–ª—è –≥–æ–¥–æ–≤–æ–≥–æ –ø–ª–∞–Ω–∞
  const getYearlyDiscount = (): number => {
    const monthlyYearly = monthlyPrice * 12;
    const discount = ((monthlyYearly - yearlyPrice) / monthlyYearly) * 100;
    return Math.round(discount);
  };

  if (isSubscribed) {
    return (
      <div className={`${fullWidth ? 'w-full' : 'inline-block'}`}>
        <Button
          onClick={handleManage}
          disabled={disabled}
          size={size}
          variant="outline"
          className={`${fullWidth ? 'w-full justify-center' : ''} border-green-300 text-green-700 bg-green-50`}
        >
          <div className="flex items-center gap-2">
            <span>‚úì</span>
            <span>–ü–æ–¥–ø–∏—Å–∫–∞ –∞–∫—Ç–∏–≤–Ω–∞</span>
            {subscriptionPlan && (
              <span className="text-xs opacity-75">
                ({subscriptionPlan === 'monthly' ? '–º–µ—Å—è—á–Ω–∞—è' : 
                  subscriptionPlan === 'yearly' ? '–≥–æ–¥–æ–≤–∞—è' : '–ø–æ–∂–∏–∑–Ω–µ–Ω–Ω–∞—è'})
              </span>
            )}
          </div>
        </Button>
      </div>
    );
  }

  return (
    <div className={`${fullWidth ? 'w-full' : 'inline-block'} relative`}>
      {/* –û—Å–Ω–æ–≤–Ω–∞—è –∫–Ω–æ–ø–∫–∞ */}
      <Button
        onClick={() => setShowPlans(!showPlans)}
        disabled={disabled || isLoading}
        size={size}
        variant="primary"
        className={`${fullWidth ? 'w-full justify-center' : ''} bg-gradient-to-r from-purple-600 to-blue-600 hover:from-purple-700 hover:to-blue-700`}
      >
        <div className="flex items-center gap-2">
          <span>üëë</span>
          <span>–ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è</span>
          {showPrices && (
            <span className="text-xs opacity-90">
              –æ—Ç {formatPrice(monthlyPrice)}/–º–µ—Å
            </span>
          )}
        </div>
      </Button>

      {/* –í—ã–ø–∞–¥–∞—é—â–µ–µ –º–µ–Ω—é —Å –ø–ª–∞–Ω–∞–º–∏ */}
      {showPlans && (
        <div className="absolute top-full left-0 right-0 mt-2 bg-white border border-gray-200 rounded-lg shadow-lg z-10 p-4 space-y-3">
          {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
          <div className="text-center">
            <h4 className="font-semibold text-gray-900">–í—ã–±–µ—Ä–∏—Ç–µ –ø–ª–∞–Ω</h4>
            <p className="text-xs text-gray-600">–ü–æ–ª—É—á–∏—Ç–µ –¥–æ—Å—Ç—É–ø –∫ —ç–∫—Å–∫–ª—é–∑–∏–≤–Ω–æ–º—É –∫–æ–Ω—Ç–µ–Ω—Ç—É</p>
          </div>

          {/* –í–∞—Ä–∏–∞–Ω—Ç—ã –ø–ª–∞–Ω–æ–≤ */}
          <div className="space-y-2">
            {/* –ú–µ—Å—è—á–Ω—ã–π –ø–ª–∞–Ω */}
            <button
              onClick={() => handleSubscribe('monthly')}
              disabled={isLoading}
              className="w-full p-3 border border-gray-200 rounded-lg hover:border-blue-300 hover:bg-blue-50 transition-colors text-left"
            >
              <div className="flex justify-between items-center">
                <div>
                  <div className="font-medium text-gray-900">–ú–µ—Å—è—á–Ω–∞—è –ø–æ–¥–ø–∏—Å–∫–∞</div>
                  <div className="text-xs text-gray-600">–û—Ç–º–µ–Ω–∏—Ç—å –≤ –ª—é–±–æ–π –º–æ–º–µ–Ω—Ç</div>
                </div>
                <div className="text-right">
                  <div className="font-semibold text-blue-600">{formatPrice(monthlyPrice)}</div>
                  <div className="text-xs text-gray-500">–≤ –º–µ—Å—è—Ü</div>
                </div>
              </div>
            </button>

            {/* –ì–æ–¥–æ–≤–æ–π –ø–ª–∞–Ω */}
            <button
              onClick={() => handleSubscribe('yearly')}
              disabled={isLoading}
              className="w-full p-3 border-2 border-blue-300 bg-blue-50 rounded-lg hover:bg-blue-100 transition-colors text-left relative"
            >
              <div className="absolute -top-2 -right-2 bg-green-500 text-white text-xs px-2 py-1 rounded-full">
                –°–∫–∏–¥–∫–∞ {getYearlyDiscount()}%
              </div>
              <div className="flex justify-between items-center">
                <div>
                  <div className="font-medium text-gray-900">–ì–æ–¥–æ–≤–∞—è –ø–æ–¥–ø–∏—Å–∫–∞</div>
                  <div className="text-xs text-gray-600">–≠–∫–æ–Ω–æ–º–∏—è {formatPrice(monthlyPrice * 12 - yearlyPrice)}</div>
                </div>
                <div className="text-right">
                  <div className="font-semibold text-blue-600">{formatPrice(yearlyPrice)}</div>
                  <div className="text-xs text-gray-500">–≤ –≥–æ–¥</div>
                </div>
              </div>
            </button>

            {/* –ü–æ–∂–∏–∑–Ω–µ–Ω–Ω—ã–π –ø–ª–∞–Ω */}
            <button
              onClick={() => handleSubscribe('lifetime')}
              disabled={isLoading}
              className="w-full p-3 border border-purple-300 bg-purple-50 rounded-lg hover:bg-purple-100 transition-colors text-left"
            >
              <div className="flex justify-between items-center">
                <div>
                  <div className="font-medium text-gray-900">–ü–æ–∂–∏–∑–Ω–µ–Ω–Ω–∞—è –ø–æ–¥–ø–∏—Å–∫–∞</div>
                  <div className="text-xs text-gray-600">–û–¥–∏–Ω –ø–ª–∞—Ç–µ–∂, –¥–æ—Å—Ç—É–ø –Ω–∞–≤—Å–µ–≥–¥–∞</div>
                </div>
                <div className="text-right">
                  <div className="font-semibold text-purple-600">{formatPrice(lifetimePrice)}</div>
                  <div className="text-xs text-gray-500">–Ω–∞–≤—Å–µ–≥–¥–∞</div>
                </div>
              </div>
            </button>
          </div>

          {/* –ö–Ω–æ–ø–∫–∞ –∑–∞–∫—Ä—ã—Ç–∏—è */}
          <button
            onClick={() => setShowPlans(false)}
            className="w-full text-center text-xs text-gray-500 hover:text-gray-700 py-2"
          >
            –ó–∞–∫—Ä—ã—Ç—å
          </button>
        </div>
      )}

      {/* –ó–∞—Ç–µ–º–Ω–µ–Ω–∏–µ –ø—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–æ–º –º–µ–Ω—é */}
      {showPlans && (
        <div
          className="fixed inset-0 z-0"
          onClick={() => setShowPlans(false)}
        />
      )}
    </div>
  );
}; 