/**
 * –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∞–≤—Ç–æ—Ä–∞
 */
interface AuthorStatsData {
  readonly articlesCount: number;
  readonly subscribersCount: number;
  readonly totalViews: number;
  readonly totalLikes: number;
  readonly totalComments: number;
  readonly totalShares: number;
  readonly totalEarnings: number;
  readonly averageReadingTime: number;
  readonly popularArticles: Array<{
    id: string;
    title: string;
    views: number;
  }>;
  readonly monthlyStats?: Array<{
    month: string;
    articles: number;
    views: number;
    earnings: number;
  }>;
}

/**
 * –ü—Ä–æ–ø—Å—ã –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∞–≤—Ç–æ—Ä–∞
 */
interface AuthorStatsProps {
  readonly authorId: string;
  readonly stats: AuthorStatsData;
  readonly isOwner?: boolean;
  readonly timeframe?: '7d' | '30d' | '90d' | '1y' | 'all';
  readonly onTimeframeChange?: (timeframe: string) => void;
}

/**
 * –ö–æ–º–ø–æ–Ω–µ–Ω—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∞–≤—Ç–æ—Ä–∞
 * –û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –¥–µ—Ç–∞–ª—å–Ω—É—é –∞–Ω–∞–ª–∏—Ç–∏–∫—É –¥–ª—è –∞–≤—Ç–æ—Ä–∞
 * @param authorId - ID –∞–≤—Ç–æ—Ä–∞
 * @param stats - –¥–∞–Ω–Ω—ã–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
 * @param isOwner - —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Ç–µ–∫—É—â–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–ª–∞–¥–µ–ª—å—Ü–µ–º
 * @param timeframe - –≤—Ä–µ–º–µ–Ω–Ω–æ–π –ø–µ—Ä–∏–æ–¥
 * @param onTimeframeChange - –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–∑–º–µ–Ω–µ–Ω–∏—è –ø–µ—Ä–∏–æ–¥–∞
 * @returns JSX —ç–ª–µ–º–µ–Ω—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∞–≤—Ç–æ—Ä–∞
 */
export const AuthorStats = ({
  authorId,
  stats,
  isOwner = false,
  timeframe = '30d',
  onTimeframeChange
}: AuthorStatsProps) => {
  // –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —á–∏—Å–µ–ª
  const formatNumber = (num: number): string => {
    if (num >= 1000000) {
      return `${(num / 1000000).toFixed(1)}M`;
    }
    if (num >= 1000) {
      return `${(num / 1000).toFixed(1)}K`;
    }
    return num.toString();
  };

  // –í—Ä–µ–º–µ–Ω–Ω—ã–µ –ø–µ—Ä–∏–æ–¥—ã
  const timeframes = [
    { key: '7d', label: '7 –¥–Ω–µ–π' },
    { key: '30d', label: '30 –¥–Ω–µ–π' },
    { key: '90d', label: '3 –º–µ—Å—è—Ü–∞' },
    { key: '1y', label: '1 –≥–æ–¥' },
    { key: 'all', label: '–í—Å–µ –≤—Ä–µ–º—è' }
  ];

  return (
    <div className="space-y-6">
      {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ –∏ —Ñ–∏–ª—å—Ç—Ä */}
      <div className="flex flex-col sm:flex-row sm:items-center sm:justify-between gap-4">
        <h2 className="text-xl font-semibold text-gray-900">
          üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∞–≤—Ç–æ—Ä–∞
        </h2>

        {/* –§–∏–ª—å—Ç—Ä –ø–æ –≤—Ä–µ–º–µ–Ω–∏ */}
        <div className="flex gap-1 bg-gray-100 rounded-lg p-1">
          {timeframes.map((tf) => (
            <button
              key={tf.key}
              onClick={() => onTimeframeChange?.(tf.key)}
              className={`px-3 py-1 rounded-md text-sm font-medium transition-colors ${
                timeframe === tf.key
                  ? 'bg-white text-gray-900 shadow-sm'
                  : 'text-gray-600 hover:text-gray-900'
              }`}
            >
              {tf.label}
            </button>
          ))}
        </div>
      </div>

      {/* –û—Å–Ω–æ–≤–Ω—ã–µ –º–µ—Ç—Ä–∏–∫–∏ */}
      <div className="grid grid-cols-2 md:grid-cols-4 gap-4">
        <div className="bg-white p-6 rounded-lg border border-gray-200">
          <div className="flex items-center gap-2 mb-2">
            <span className="text-2xl">üìù</span>
            <span className="text-sm font-medium text-gray-600">–°—Ç–∞—Ç—å–∏</span>
          </div>
          <div className="text-2xl font-bold text-gray-900">
            {stats.articlesCount}
          </div>
          <div className="text-xs text-gray-500 mt-1">
            –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–æ
          </div>
        </div>

        <div className="bg-white p-6 rounded-lg border border-gray-200">
          <div className="flex items-center gap-2 mb-2">
            <span className="text-2xl">üë•</span>
            <span className="text-sm font-medium text-gray-600">–ü–æ–¥–ø–∏—Å—á–∏–∫–∏</span>
          </div>
          <div className="text-2xl font-bold text-gray-900">
            {formatNumber(stats.subscribersCount)}
          </div>
          <div className="text-xs text-gray-500 mt-1">
            —á–µ–ª–æ–≤–µ–∫
          </div>
        </div>

        <div className="bg-white p-6 rounded-lg border border-gray-200">
          <div className="flex items-center gap-2 mb-2">
            <span className="text-2xl">üëÅÔ∏è</span>
            <span className="text-sm font-medium text-gray-600">–ü—Ä–æ—Å–º–æ—Ç—Ä—ã</span>
          </div>
          <div className="text-2xl font-bold text-gray-900">
            {formatNumber(stats.totalViews)}
          </div>
          <div className="text-xs text-gray-500 mt-1">
            –≤—Å–µ–≥–æ
          </div>
        </div>

        <div className="bg-white p-6 rounded-lg border border-gray-200">
          <div className="flex items-center gap-2 mb-2">
            <span className="text-2xl">‚ù§Ô∏è</span>
            <span className="text-sm font-medium text-gray-600">–õ–∞–π–∫–∏</span>
          </div>
          <div className="text-2xl font-bold text-gray-900">
            {formatNumber(stats.totalLikes)}
          </div>
          <div className="text-xs text-gray-500 mt-1">
            –ø–æ–ª—É—á–µ–Ω–æ
          </div>
        </div>
      </div>

      {/* –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –º–µ—Ç—Ä–∏–∫–∏ */}
      <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
        <div className="bg-white p-6 rounded-lg border border-gray-200">
          <div className="flex items-center gap-2 mb-2">
            <span className="text-xl">üí¨</span>
            <span className="text-sm font-medium text-gray-600">–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏</span>
          </div>
          <div className="text-lg font-semibold text-gray-900">
            {formatNumber(stats.totalComments)}
          </div>
        </div>

        <div className="bg-white p-6 rounded-lg border border-gray-200">
          <div className="flex items-center gap-2 mb-2">
            <span className="text-xl">üì§</span>
            <span className="text-sm font-medium text-gray-600">–†–µ–ø–æ—Å—Ç—ã</span>
          </div>
          <div className="text-lg font-semibold text-gray-900">
            {formatNumber(stats.totalShares)}
          </div>
        </div>

        <div className="bg-white p-6 rounded-lg border border-gray-200">
          <div className="flex items-center gap-2 mb-2">
            <span className="text-xl">‚è±Ô∏è</span>
            <span className="text-sm font-medium text-gray-600">–í—Ä–µ–º—è —á—Ç–µ–Ω–∏—è</span>
          </div>
          <div className="text-lg font-semibold text-gray-900">
            {stats.averageReadingTime} –º–∏–Ω
          </div>
          <div className="text-xs text-gray-500 mt-1">
            –≤ —Å—Ä–µ–¥–Ω–µ–º
          </div>
        </div>
      </div>

      {/* –ó–∞—Ä–∞–±–æ—Ç–æ–∫ (—Ç–æ–ª—å–∫–æ –¥–ª—è –≤–ª–∞–¥–µ–ª—å—Ü–∞) */}
      {isOwner && stats.totalEarnings > 0 && (
        <div className="bg-gradient-to-r from-green-50 to-emerald-50 p-6 rounded-lg border border-green-200">
          <div className="flex items-center gap-2 mb-2">
            <span className="text-2xl">üí∞</span>
            <span className="text-sm font-medium text-green-700">–î–æ—Ö–æ–¥—ã</span>
          </div>
          <div className="text-3xl font-bold text-green-800">
            {stats.totalEarnings.toLocaleString('ru-RU')} ‚ÇΩ
          </div>
          <div className="text-sm text-green-600 mt-1">
            –∑–∞—Ä–∞–±–æ—Ç–∞–Ω–æ –∑–∞ {timeframe === 'all' ? '–≤—Å–µ –≤—Ä–µ–º—è' : timeframes.find(t => t.key === timeframe)?.label}
          </div>
        </div>
      )}

      {/* –ü–æ–ø—É–ª—è—Ä–Ω—ã–µ —Å—Ç–∞—Ç—å–∏ */}
      {stats.popularArticles && stats.popularArticles.length > 0 && (
        <div className="bg-white rounded-lg border border-gray-200 p-6">
          <h3 className="text-lg font-semibold text-gray-900 mb-4">
            üî• –ü–æ–ø—É–ª—è—Ä–Ω—ã–µ —Å—Ç–∞—Ç—å–∏
          </h3>
          <div className="space-y-3">
            {stats.popularArticles.slice(0, 5).map((article, index) => (
              <div key={article.id} className="flex items-center justify-between p-3 bg-gray-50 rounded-lg">
                <div className="flex items-center gap-3">
                  <span className="flex items-center justify-center w-6 h-6 bg-blue-100 text-blue-700 text-sm font-medium rounded-full">
                    {index + 1}
                  </span>
                  <span className="text-sm font-medium text-gray-900 truncate">
                    {article.title}
                  </span>
                </div>
                <div className="flex items-center gap-1 text-sm text-gray-500">
                  <span>üëÅÔ∏è</span>
                  <span>{formatNumber(article.views)}</span>
                </div>
              </div>
            ))}
          </div>
        </div>
      )}

      {/* –ì—Ä–∞—Ñ–∏–∫ –ø–æ –º–µ—Å—è—Ü–∞–º (—É–ø—Ä–æ—â–µ–Ω–Ω—ã–π) */}
      {stats.monthlyStats && stats.monthlyStats.length > 0 && (
        <div className="bg-white rounded-lg border border-gray-200 p-6">
          <h3 className="text-lg font-semibold text-gray-900 mb-4">
            üìà –î–∏–Ω–∞–º–∏–∫–∞ –ø–æ –º–µ—Å—è—Ü–∞–º
          </h3>
          <div className="overflow-x-auto">
            <table className="w-full text-sm">
              <thead>
                <tr className="border-b border-gray-200">
                  <th className="text-left py-2 font-medium text-gray-600">–ú–µ—Å—è—Ü</th>
                  <th className="text-right py-2 font-medium text-gray-600">–°—Ç–∞—Ç—å–∏</th>
                  <th className="text-right py-2 font-medium text-gray-600">–ü—Ä–æ—Å–º–æ—Ç—Ä—ã</th>
                  {isOwner && (
                    <th className="text-right py-2 font-medium text-gray-600">–î–æ—Ö–æ–¥—ã</th>
                  )}
                </tr>
              </thead>
              <tbody>
                {stats.monthlyStats.map((month, index) => (
                  <tr key={index} className="border-b border-gray-100">
                    <td className="py-2 text-gray-900">{month.month}</td>
                    <td className="py-2 text-right text-gray-700">{month.articles}</td>
                    <td className="py-2 text-right text-gray-700">{formatNumber(month.views)}</td>
                    {isOwner && (
                      <td className="py-2 text-right text-green-600 font-medium">
                        {month.earnings.toLocaleString('ru-RU')} ‚ÇΩ
                      </td>
                    )}
                  </tr>
                ))}
              </tbody>
            </table>
          </div>
        </div>
      )}
    </div>
  );
}; 