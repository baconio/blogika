'use client';

import { useState } from 'react';
import { Button } from '@/components/ui/Button';
import { Modal } from '@/components/ui/Modal';

/**
 * –ü—Ä–æ–ø—Å—ã –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞ –±–∏–æ–≥—Ä–∞—Ñ–∏–∏ –∞–≤—Ç–æ—Ä–∞
 */
interface AuthorBioProps {
  readonly authorId: string;
  readonly bio: string;
  readonly isOwner?: boolean;
  readonly onUpdateBio?: (bio: string) => Promise<void>;
}

/**
 * –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –±–∏–æ–≥—Ä–∞—Ñ–∏–∏ –∞–≤—Ç–æ—Ä–∞
 * –û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –±–∏–æ–≥—Ä–∞—Ñ–∏—é —Å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å—é —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –¥–ª—è –≤–ª–∞–¥–µ–ª—å—Ü–∞
 * @param authorId - ID –∞–≤—Ç–æ—Ä–∞
 * @param bio - —Ç–µ–∫—Å—Ç –±–∏–æ–≥—Ä–∞—Ñ–∏–∏
 * @param isOwner - —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Ç–µ–∫—É—â–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–ª–∞–¥–µ–ª—å—Ü–µ–º
 * @param onUpdateBio - –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –±–∏–æ–≥—Ä–∞—Ñ–∏–∏
 * @returns JSX —ç–ª–µ–º–µ–Ω—Ç –±–∏–æ–≥—Ä–∞—Ñ–∏–∏ –∞–≤—Ç–æ—Ä–∞
 */
export const AuthorBio = ({
  authorId,
  bio,
  isOwner = false,
  onUpdateBio
}: AuthorBioProps) => {
  const [showEditModal, setShowEditModal] = useState(false);
  const [editedBio, setEditedBio] = useState(bio);
  const [isUpdating, setIsUpdating] = useState(false);
  const [isExpanded, setIsExpanded] = useState(false);

  // –û–±—Ä–µ–∑–∞–µ–º –±–∏–æ–≥—Ä–∞—Ñ–∏—é –¥–ª—è –∫—Ä–∞—Ç–∫–æ–≥–æ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
  const bioText = bio.replace(/<[^>]*>/g, ''); // –£–±–∏—Ä–∞–µ–º HTML —Ç–µ–≥–∏ –¥–ª—è –ø–æ–¥—Å—á–µ—Ç–∞
  const isLong = bioText.length > 300;
  const displayBio = isLong && !isExpanded 
    ? bioText.substring(0, 300) + '...' 
    : bioText;

  const handleSaveBio = async () => {
    if (!onUpdateBio || editedBio.trim() === bio.trim()) {
      setShowEditModal(false);
      return;
    }

    setIsUpdating(true);
    try {
      await onUpdateBio(editedBio.trim());
      setShowEditModal(false);
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –±–∏–æ–≥—Ä–∞—Ñ–∏–∏:', error);
    } finally {
      setIsUpdating(false);
    }
  };

  const handleCancelEdit = () => {
    setEditedBio(bio);
    setShowEditModal(false);
  };

  if (!bio && !isOwner) {
    return null;
  }

  return (
    <>
      <div className="bg-white rounded-lg border border-gray-200 p-6">
        <div className="flex items-start justify-between mb-4">
          <h3 className="text-lg font-semibold text-gray-900">
            üìù –û —Å–µ–±–µ
          </h3>
          
          {isOwner && (
            <Button
              onClick={() => setShowEditModal(true)}
              variant="outline"
              size="sm"
            >
              {bio ? '–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å' : '–î–æ–±–∞–≤–∏—Ç—å –±–∏–æ–≥—Ä–∞—Ñ–∏—é'}
            </Button>
          )}
        </div>

        {bio ? (
          <div className="space-y-4">
            {/* –ë–∏–æ–≥—Ä–∞—Ñ–∏—è */}
            <div className="prose prose-sm max-w-none text-gray-700">
              <p className="whitespace-pre-wrap">
                {displayBio}
              </p>
            </div>

            {/* –ö–Ω–æ–ø–∫–∞ "–ü–æ–∫–∞–∑–∞—Ç—å –µ—â–µ" */}
            {isLong && (
              <button
                onClick={() => setIsExpanded(!isExpanded)}
                className="text-blue-600 hover:text-blue-800 text-sm font-medium transition-colors"
              >
                {isExpanded ? '–°–∫—Ä—ã—Ç—å' : '–ü–æ–∫–∞–∑–∞—Ç—å –ø–æ–ª–Ω–æ—Å—Ç—å—é'}
              </button>
            )}
          </div>
        ) : isOwner ? (
          <div className="text-center py-8">
            <div className="text-gray-400 text-4xl mb-3">‚úçÔ∏è</div>
            <p className="text-gray-500 mb-4">
              –†–∞—Å—Å–∫–∞–∂–∏—Ç–µ —á–∏—Ç–∞—Ç–µ–ª—è–º –æ —Å–µ–±–µ
            </p>
            <Button
              onClick={() => setShowEditModal(true)}
              variant="primary"
              size="sm"
            >
              –î–æ–±–∞–≤–∏—Ç—å –±–∏–æ–≥—Ä–∞—Ñ–∏—é
            </Button>
          </div>
        ) : null}
      </div>

      {/* –ú–æ–¥–∞–ª —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –±–∏–æ–≥—Ä–∞—Ñ–∏–∏ */}
      <Modal
        isOpen={showEditModal}
        onClose={handleCancelEdit}
        title="–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –±–∏–æ–≥—Ä–∞—Ñ–∏–∏"
        maxWidth="lg"
      >
        <div className="space-y-4">
          <div>
            <label className="block text-sm font-medium text-gray-700 mb-2">
              –†–∞—Å—Å–∫–∞–∂–∏—Ç–µ –æ —Å–µ–±–µ
            </label>
            <textarea
              value={editedBio}
              onChange={(e) => setEditedBio(e.target.value)}
              placeholder="–û–ø–∏—à–∏—Ç–µ —Å–≤–æ–π –æ–ø—ã—Ç, –∏–Ω—Ç–µ—Ä–µ—Å—ã, –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è..."
              rows={8}
              maxLength={2000}
              className="w-full px-3 py-2 border border-gray-300 rounded-lg resize-none focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent"
            />
            <div className="flex justify-between items-center mt-2 text-xs text-gray-500">
              <span>–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –æ–±—ã—á–Ω—ã–π —Ç–µ–∫—Å—Ç, HTML –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è</span>
              <span>{editedBio.length}/2000</span>
            </div>
          </div>

          {/* –ü—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—ã–π –ø—Ä–æ—Å–º–æ—Ç—Ä */}
          {editedBio.trim() && (
            <div className="border-t border-gray-200 pt-4">
              <h4 className="text-sm font-medium text-gray-700 mb-2">
                –ü—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—ã–π –ø—Ä–æ—Å–º–æ—Ç—Ä:
              </h4>
              <div className="bg-gray-50 p-3 rounded-lg">
                <p className="text-sm text-gray-700 whitespace-pre-wrap">
                  {editedBio.trim()}
                </p>
              </div>
            </div>
          )}

          {/* –ö–Ω–æ–ø–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π */}
          <div className="flex justify-end gap-3 pt-4">
            <Button
              onClick={handleCancelEdit}
              variant="outline"
              disabled={isUpdating}
            >
              –û—Ç–º–µ–Ω–∞
            </Button>
            <Button
              onClick={handleSaveBio}
              variant="primary"
              disabled={isUpdating || editedBio.trim().length === 0}
            >
              {isUpdating ? '–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ...' : '–°–æ—Ö—Ä–∞–Ω–∏—Ç—å'}
            </Button>
          </div>
        </div>
      </Modal>
    </>
  );
}; 